#!/bin/bash

PROG=$0

# skeleton:
# <html>
#   <head>
#     <link rel="stylesheet" href="{{ STATIC_URL }}css/changelog.css">
#     <link href='http://fonts.googleapis.com/css?family=Ubuntu' rel='stylesheet' type='text/css'>
#   </head>
#   <body>
#     <div class="branding">
#       <div class="page-title">
#         HCF Shop Management Software Changelog
#       </div>
#       <div class="page-subtitle">2014-02-01 - 2014-04-24</div>
#     </div>
#     <div class="container_12">
#       <div class="card">
#       </div> <!-- /.card -->
#     </div> <!-- /.container_12 -->
#   </body>
# </html>

header()
{
    local begin="$1"
    local end="$2"
    cat <<EOF
<html>
  <head>
    <style>
      $(tr '\n' ' ' < $(dirname $PROG)/changelog.css)
    </style>
    <link href='http://fonts.googleapis.com/css?family=Ubuntu' rel='stylesheet' type='text/css'>
  </head>
  <body>

    <div class="branding">
      <div class="page-title">
        HCF Shop Management Software Changelog
      </div>
      <div class="page-subtitle">$begin - $end</div>
    </div>

    <div class="container_12">
      <div class="card">
EOF
}

footer()
{
    cat <<EOF
      </div> <!-- /.card -->
    </div> <!-- /.container_12 -->
  </body>
</html>
EOF
}

usage()
{
    cat <<EOF
$(basename $PROG) gitrange project_name gh_repo gh_token

Example:
========

$(basename $PROG) v1.2...v.1.3 "My cool project" mgalgs/somerepo abcdef01234

EOF
}

[[ "$1" = "-h" || "$1" = "--help" || $# -ne 4 ]] && { usage; exit 1; }

range=$1
project_name="$2"
gh_repo=$3
gh_token=$4

gh_commit_url_fmt="https://github.com/%s/commit/%s"
gh_issues_url_fmt="https://github.com/%s/issues/%d"
gh_issues_api_fmt="https://api.github.com/repos/%s/issues/%d?access_token=%s"

render_entry()
{
    local repo=$1
    local commitsha1=$2
    local subject="$3"
    local thedate="$4"
    local issuenum="$5"
    local issuetitle="$6"
    local issuetitlesafe=$(sed "s/\"/\&quot;/g" <<<"$issuetitle")
    local subjectsafe=$(sed "s/\"/\&quot;/g" <<<"$subject")
    local fixesbr
    local issuebtn
    [[ -n "$issuetitle" ]] && {
        fixesbr="<br>"
        issuebtn="<a title=\"$issuetitlesafe\" class=\"btn gh-fixes\" href=\"https://github.com/$repo/issues/$issuenum\">view issue</a>"
    }
    cat <<EOF
        <div class="changelog-entry">
          <div class="grid_3">
            <div class="grid_1-5">
              <a title="$subjectsafe" class="btn commit" href="https://github.com/$repo/commit/$commitsha1">view commit</a>
            </div>
            <div class="grid_1-5">
              $issuebtn
            </div>
          </div>
          <div class="grid_8">
            <span class="gh-fixes-text">$issuetitle</span>$fixesbr
            <span class="commit-text">$subject <i>($thedate)</i></span>
          </div>
          <div class="clear"></div>
        </div>
EOF
}

thedates=( $(git log --date=iso8601 $range --pretty="%cd" | cut -d' ' -f1) )
header ${thedates[@]:(-1)} ${thedates[0]}

while read sha1; do
    thedate=$(git log -1 $sha1 --date=short --pretty='%cd')
    thesubject=$(git log -1 $sha1 --pretty='%s')
    theurl=$(printf $gh_commit_url_fmt $gh_repo $sha1)
    gh_fixes=$(git log -1 $sha1 | grep -e '^    Fixes #[[:digit:]]\+$')
    issuetitle=
    [[ -n "$gh_fixes" ]] && {
        issue_num=${gh_fixes##*Fixes \#}
        issuetitle=$(curl -s $(printf $gh_issues_api_fmt "$gh_repo" $issue_num $gh_token) | jshon -e title | sed 's/"\(.*\)"/\1/g' | sed 's/\\"/"/g' | sed 's|\\/|/|g')
    }

    render_entry $gh_repo $sha1 "$thesubject" "$thedate" "$issue_num" "$issuetitle"
done < <(git log $range --pretty="%H")

footer
